<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAADAE
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/I8Yk/yTDa/8k
        w2v/I8YkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/yuxJP8rtIH/K7WN/yu1ZP8s
        tVb/LLVW/yu1ZP8stIz/K7SB/yuxJAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP8yo4v/LaURAAAAAP82
        oRP/MaN9/zGjff8rqhIAAAAA/y2lEf8ypIoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD/OJWR/zeVc/84
        lIj/OZR1/ziUaf84lGn/OJV2/ziUiP83lXP/OJWRAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/0CHkP89
        hhUAAAAAAAAAAP9Ah0D/QIdAAAAAAAAAAAD/PYYV/0CHkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9G
        doAAAAAAAAAAAAAAAAD/RHhA/0R4QAAAAAAAAAAAAAAAAP9GdoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAD/TGiA/01kIf9MZ2j/TWhC/1VVA/9VVQP/TWhC/01oYP9NZCH/TGiAAAAAAAAAAAAAAAAAAAAAAP9R
        XhP/Ullw/1FYo/9TV2n/UFgg/1JYgv9SWND/UljQ/1JYgv9QWCD/U1dp/1FYo/9SWXD/UV4TAAAAAAAA
        AAD/WUlN/1pIkf9aSFL/WUh4/1xJff+BhXX/rs6b/67Om/+BhXX/XEl9/1pJd/9aSFL/WkiR/1lJTQAA
        AAAAAAAA/2A4Tf9gOZj/YDhS/2A5gv9fOYb/hFdy/7+GmP+/hpj/hFdy/2A6hf9gOYL/YDhS/2A5mP9g
        OE0AAAAAAAAAAP9rKBP/Zilw/2YphP9nKGb/aiwd/2Ypgv9mKdH/ZinR/2Ypgv9qLB3/Zypo/2YphP9l
        KW//aygTAAAAAAAAAAAAAAAAAAAAAAAAAAD/ahod/2wbaP9sG0L/VQAD/1UAA/9sG0L/bRtn/20bHAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AAD//wAA//8AAPPPAADv9wAA69cAAO/3AADv9wAA7/cAAOw3
        AADeewAA0ksAAOw3AAD//wAA//8AAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAIAQAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        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
        NbH/YDZa/5JJFf/FdlT/xXZU/4tRFv9iNVv/YTWy/2E18f9hNrD/YDZa/2I7DQAAAAAAAAAA/2YzFP9h
        Nan/YTXqAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/2QuVP9lLcX/ZS3z/2Utqf9kLlT/cTkJAAAAAAAA
        AAD/ZjMP/2UsXf9lLbT/ZS3w/2Utq/9lLKz/ZS3w/2Uus/9lLF3/ZjMPAAAAAAAAAAD/cTkJ/2QsUv9m
        Lqj/ZS3y/2UuxP9lLlMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAP9qIx3/aCZx/2gmxf9o
        JvH/aCam/2cnT/9wIBD/aCZR/2gnpf9oJu3/aCa6/2gmu/9oJu3/aCel/2gmUf9wIBD/ZydP/2gnpf9n
        Ju//aCfA/2gmbP9sJxoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAA/2wdGv9rH2v/ax68/2se9f9rH7f/bB9j/2sbEwAAAAAAAAAA/2YaFP9rH2T/ax+3/2se7f9r
        Hrz/bB1o/28hFwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////////////////w////iR//+Hnj//v5/f/z8
        Pz/84kc//B54P/z+fz/8/n8//P5/P/z+fz/8//8//MfjP/w4HD/x+B+P58fj5/A4HA/wOBwP58fj5/H4
        H4/+OBx//8fj////////////////////////////
</value>
  </data>
</root>